<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online_bookstore.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.online_bookstore.domain.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_price" property="orderPrice" jdbcType="DECIMAL" />
    <result column="order_createtime" property="orderCreatetime" jdbcType="TIMESTAMP" />
    <result column="order_paytime" property="orderPaytime" jdbcType="TIMESTAMP" />
    <result column="order_address" property="orderAddress" jdbcType="INTEGER" />
    <result column="order_user" property="orderUser" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_price, order_createtime, order_paytime, order_address, order_user, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.online_bookstore.domain.Order" >
    insert into tb_order (id, order_price, order_createtime, 
      order_paytime, order_address, order_user, 
      state)
    values (#{id,jdbcType=INTEGER}, #{orderPrice,jdbcType=DECIMAL}, #{orderCreatetime,jdbcType=TIMESTAMP}, 
      #{orderPaytime,jdbcType=TIMESTAMP}, #{orderAddress,jdbcType=INTEGER}, #{orderUser,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.online_bookstore.domain.Order" >
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderCreatetime != null" >
        order_createtime,
      </if>
      <if test="orderPaytime != null" >
        order_paytime,
      </if>
      <if test="orderAddress != null" >
        order_address,
      </if>
      <if test="orderUser != null" >
        order_user,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderCreatetime != null" >
        #{orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPaytime != null" >
        #{orderPaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAddress != null" >
        #{orderAddress,jdbcType=INTEGER},
      </if>
      <if test="orderUser != null" >
        #{orderUser,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.online_bookstore.domain.Order" >
    update tb_order
    <set >
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderCreatetime != null" >
        order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPaytime != null" >
        order_paytime = #{orderPaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAddress != null" >
        order_address = #{orderAddress,jdbcType=INTEGER},
      </if>
      <if test="orderUser != null" >
        order_user = #{orderUser,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.online_bookstore.domain.Order" >
    update tb_order
    set order_price = #{orderPrice,jdbcType=DECIMAL},
      order_createtime = #{orderCreatetime,jdbcType=TIMESTAMP},
      order_paytime = #{orderPaytime,jdbcType=TIMESTAMP},
      order_address = #{orderAddress,jdbcType=INTEGER},
      order_user = #{orderUser,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>